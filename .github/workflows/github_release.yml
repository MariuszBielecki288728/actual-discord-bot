# This workflow automatically creates a GitHub release for the project on successful version update

name: Create a GitHub release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build Binaries for ${{ matrix.os }}-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [
          '3.12',
        ]
    steps:

      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: Gr1N/setup-poetry@v9

      - name: Install library and dependencies
        run: |
          poetry run pip install --upgrade pip setuptools
          poetry install

      - name: Build releases
        run: |
          poetry build

      - name: Upload builds
        uses: actions/upload-artifact@v5
        with:
          name: built-binary
          path: |
            dist/*.whl
            dist/*.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          name: built-binary

      - name: Check Version
        uses: nowsprinting/check-version-format-action@v4
        id: version
        with:
          prefix: 'v'

      - name: Get previous tag
        id: previousTag
        run: |
          name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | tail -2 | head -1)
          echo "previousTag: $name"
          echo "previousTag=$name" >> $GITHUB_ENV

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}
          includeInvalidCommits: true

      - name: Create Release
        uses: ncipollo/release-action@v1.20.0
        with:
          allowUpdates: true
          draft: true
          makeLatest: true
          name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changes }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "*.whl, *.tar.gz"
